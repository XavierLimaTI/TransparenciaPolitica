name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit-tests:
    name: Unit tests (Jest)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci --include=dev
        env:
          NODE_ENV: development


      - name: Sanity check @playwright/test
        run: |
          echo "Checking @playwright/test..."
          npm ls @playwright/test || echo "@playwright/test not found"


      - name: Run unit tests (Jest)
        run: npm test --silent

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-lcov
          path: coverage/lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage/lcov.info
          flags: unittests
          fail_ci_if_error: false

  e2e:
    name: E2E (Playwright)
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci --include=dev
        env:
          NODE_ENV: development


      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      
      - name: Sanity check @playwright/test (e2e)
        run: |
          echo "Checking @playwright/test for e2e..."
          npm ls @playwright/test || echo "@playwright/test not found"

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      # E2E debug info removed after stability

      - name: Start static server for tests
        run: |
          echo 'Starting http-server on port 8000'
          npx http-server -c-1 -p 8000 &
          echo $! > .httpserver.pid

      - name: Wait for fixture to be available
        run: |
          echo 'Waiting for tests fixture to be available at http://127.0.0.1:8000/tests/fixtures/despesas.csv'
          for i in {1..15}; do
            status=$(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:8000/tests/fixtures/despesas.csv || echo "000")
            echo "Attempt $i: HTTP status $status"
            if [ "$status" = "200" ]; then
              echo 'Fixture available'; exit 0
            fi
            sleep 1
          done
          echo 'Fixture not available after retries'; exit 1

      - name: Run Playwright tests
        run: |
          npx playwright test tests/e2e --reporter=github
        env:
          DISPLAY: :99

      - name: Stop static server
        if: always()
        run: |
          if [ -f .httpserver.pid ]; then
            kill "$(cat .httpserver.pid)" || true
            rm -f .httpserver.pid
          fi
